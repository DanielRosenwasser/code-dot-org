<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "‚úÖ **TO DO:** In <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Player.java</code>, override the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">equals()</code> method to check if two <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Player</code> objects have the same position. If both <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Player</code> objects have the same position, return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">true</code>, otherwise return <code style=\"background-color: #ececec; color: black; font-weight: bold;\">false</code>.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the documentation for the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">Object</code> class in the <strong>Documentation</strong> tab ‚¨ÜÔ∏è for help overriding and using the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">equals()</code> method.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "Player.java": {
        "text": "import org.code.theater.*;\n\n/*\n * Represents a baseball player\n */\npublic class Player {\n\n  private String name;      // The name of a player\n  private String position;  // The position of a player\n\n  /*\n   * Sets name to the specified name and position\n   * to the specified position\n   */\n  public Player(String name, String position) {\n    this.name = name;\n    this.position = position;\n  }\n\n  /*\n   * Returns the name of the player\n   */\n  public String getName() {\n    return name;\n  }\n\n  /*\n   * Returns the position of the player\n   */\n  public String getPosition() {\n    return position;\n  }\n\n  /*\n   * Returns true if this Player has the same position as other\n   */\n  public boolean equals(Object other) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Return true if other points to the same object as this object, and\n     * return false if other is not a Player. If neither of these conditions\n     * are true, cast other as a Player and return true if this object's position\n     * is the same as the other object's position. Otherwise, return false.\n     * -----------------------------------------------------------------------------\n     */\n\n    if (other == this) {\n      return true;\n    }\n\n    if (!(other instanceof Player)) {\n      return false;\n    }\n\n    Player otherPlayer = (Player) other;\n    return this.position.equals(otherPlayer.position);\n  }\n\n  /*\n   * Returns a String containing the name and position of the player\n   */\n  public String toString() {\n    return name + \": \" + position;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 2
      },
      "TeamRunner.java": {
        "text": "public class TeamRunner {\n  public static void main(String[] args) {\n\n    // Creates a 1D array of Player objects\n    Player[] players = {new Player(\"Mike Trout\", \"Center Fielder\"), new Player(\"Clayton Kershaw\", \"Starting Pitcher\"),\n                        new Player(\"Aaron Judge\", \"Right Fielder\"), new Player(\"Mookie Betts\", \"Right Fielder\"),\n                        new Player(\"Salvador Perez\", \"Catcher\")};\n\n    // Creates a Team object\n    Team baseball = new Team(players);\n\n    // Creates a new Player object\n    Player max = new Player(\"Max Scherzer\", \"Starting Pitcher\");\n\n    // Calls the getSamePositions() method and prints the results\n    System.out.println(baseball.getSamePositions(max));\n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "Team.java": {
        "text": "/*\n * Represents a team\n */\npublic class Team {\n\n  private Player[] players;     // The 1D array of Player objects\n\n  /*\n   * Initializes players to the specified 1D array of Player objects\n   */\n  public Team(Player[] players) {\n    this.players = players;\n  }\n\n  /*\n   * Returns the 1D array of players\n   */\n  public Player[] getPlayers() {\n    return players;\n  }\n\n  /*\n   * Returns a String containing the names of each player\n   * that has the same position as other\n   */\n  public String getSamePositions(Player other) {\n    String result = \"\";\n\n    for (int index = 0; index < players.length; index++) {\n      if (players[index].equals(other)) {\n        result += players[index] + \"\\n\";\n      }\n    }\n\n    if (result.equals(\"\")) {\n      result = \"No players found.\";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    },
    "display_name": "Baseball Players",
    "bubble_choice_description": "Override the `equals()` method in the `Player` class to check if two `Player` objects have the same position.",
    "thumbnail_url": "https://images.code.org/482b7ecb79120d004ef820e3eba97e2d-baseball.png"
  },
  "game_id": 68,
  "created_at": "2023-02-17T18:46:34.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-02-17T18:46:34.313+00:00\",\"changed\":[\"cloned from \\\"CSA U4L6-L7b_2023\\\"\"],\"cloned_from\":\"CSA U4L6-L7b_2023\"},{\"changed_at\":\"2023-02-17 18:46:35 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-07 19:11:10 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-07 19:11:53 +0000\",\"changed\":[\"csa_view_mode\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-14 23:49:23 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-14 23:49:24 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-14 23:49:34 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-14 23:49:45 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-14 23:50:59 +0000\",\"changed\":[\"csa_view_mode\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-15 00:01:21 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-15 00:01:22 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-15 00:01:29 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
