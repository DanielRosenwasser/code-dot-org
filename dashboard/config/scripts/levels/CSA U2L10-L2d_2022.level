<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `FoodTruck`(#e7e8ea) class represents a single food truck that is part of the Project Mercury Pastries Food Truck business.\r\n\r\n##Getting Started\r\n1. Import `Dessert.java`(#e7e8ea) from the ![Backpack](https://images.code.org/b17feeef2e8db2a98abdb4a5860c5c61-image-1642175705297.png)\r\n\r\n*Don't have it or it doesn't work? That's ok! Just copy and paste the code from <a href=\"https://studio.code.org/projects/javalab/XPKNPDEmcPt5PXsjJHko9Kg7kUVaj3asVvIHH3YswCI\" target=\"_blank\">**here**</a>.*\r\n\r\n##In FoodTruck.java:\r\n2. Complete the parameterized constructor. Use the `this`(#e7e8ea) keyword to initialize the instance variables to the values passed to the parameters.\r\n\r\n3. Complete the `hasGreaterProfit()`(#e7e8ea) method.\r\n\r\n   * If the result of a call to `addBonus()`(#e7e8ea) with the current object using the `this`(#e7e8ea) keyword is greater than the result of a call to `addBonus()`(#e7e8ea) with `otherTruck`(#e7e8ea), return `true`(#e7e8ea).\r\n   \r\n   * Otherwise, return `false`(#e7e8ea).",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "display_name": "The FoodTruck Class",
    "bubble_choice_description": "The FoodTruck class represents a single food truck that is part of the Project Mercury Pastries Food Truck business. Complete its parameterized constructor and hasGreaterProfit() method.",
    "thumbnail_url": "https://images.code.org/9c436c06bc850fb25f4e797e0603b0b6-image-1646615592652.png",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    Dessert amyDessert = new Dessert(\"strawberry\", 4.50);\n    Dessert saraDessert = new Dessert(\"blueberry\", 3.75);\n\n    FoodTruck amyFoodTruck = new FoodTruck(\"Amy\", amyDessert, 5700);\n    FoodTruck saraFoodTruck = new FoodTruck(\"Sara\", saraDessert, 4500);\n\n    System.out.println(\"Did Amy's food truck have a greater profit than Sara's?\");\n    System.out.println(amyFoodTruck.hasGreaterProfit(saraFoodTruck));\n    \n  }\n}",
        "isVisible": true
      },
      "FoodTruck.java": {
        "text": "/*\n * Represents a single food truck at the\n * Project Mercury Pastries Food Truck business\n */\npublic class FoodTruck {\n\n  private String owner;         // The owner of the FoodTruck\n  private Dessert newDessert;   // The Dessert the FoodTruck sells\n  private double profit;        // The profit of the FoodTruck\n\n  /*\n   * Creates a FoodTruck with the specified\n   * owner, Dessert, and profit\n   */\n  public FoodTruck(String owner, Dessert newDessert, double profit) {\n    // TO DO #2: Initialize the instance variables to the values\n    // passed to the parameters.\n    \n    \n  }\n\n  /*\n   * Gets the current value of profit\n   */\n  public double getProfit() {\n    return profit;\n  }\n\n  /*\n   * Returns the current value of owner\n   */\n  public String getOwner() {\n    return owner;\n  }\n\n  /*\n   * Returns the current Dessert\n   */\n  public Dessert getDessert() {\n    return newDessert;\n  }\n\n  /*\n   * Sets profit to the given value\n   */\n  public void setProfit(double newProfit) {\n    profit = newProfit;\n  }\n\n  /*\n   * Adds a bonus to the specified FoodTruck\n   */\n  public double addBonus(FoodTruck truck) {\n    double bonus = truck.getProfit() * 0.15;\n    truck.setProfit(truck.getProfit() + bonus);\n    \n    return truck.getProfit();\n  }\n\n  /*\n   * Checks whether or not this FoodTruck has a greater\n   * profit than otherTruck after receiving a bonus\n   */\n  public boolean hasGreaterProfit(FoodTruck otherTruck) {\n    // TO DO #3: Use an if-else statement to check if the result\n    // of addBonus with this FoodTruck is greater than the\n    // result of addBonus with the otherTruck\n    \n    \n  }\n}",
        "isVisible": true
      }
    },
    "encrypted_examples": "+2JDDQW62ZlqxWyXdQHBCFy8OtybMPAt2n9mnOWWxaY9Yp+Wj1aArmnuZjS9\nusYerJBNuSXrWQpiU1P9yF65u54ivVbj0JeIlGeKt7gGKbiy976YQm057x56\nzro6GZVd\n",
    "encrypted_exemplar_sources": "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\n",
    "encrypted_validation": "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\nat2YZiTSX8BVHNA=\n"
  },
  "game_id": 68,
  "created_at": "2022-03-07T00:56:03.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-03-07T00:56:03.644+00:00\",\"changed\":[\"cloned from \\\"CSA U2L10-L2c_2022\\\"\"],\"cloned_from\":\"CSA U2L10-L2c_2022\"},{\"changed_at\":\"2022-03-07 00:56:06 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-07 01:13:34 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-07 13:25:55 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-08 14:52:36 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-08 14:52:55 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-11 13:13:30 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-19 16:11:24 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-27 21:26:48 +0000\",\"changed\":[\"encrypted_examples\",\"contained_level_names\"],\"changed_by_id\":977,\"changed_by_email\":\"kaitie+teacher@code.org\"},{\"changed_at\":\"2022-06-24 15:03:59 +0000\",\"changed\":[\"encrypted_examples\",\"map_reference\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-06-27 13:21:19 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-07-12 20:50:11 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 15:43:55 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 15:45:39 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 15:45:47 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 15:47:41 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 15:49:49 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 15:50:57 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 15:52:45 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 15:52:55 +0000\",\"changed\":[\"encrypted_validation\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-08-11 15:55:10 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
