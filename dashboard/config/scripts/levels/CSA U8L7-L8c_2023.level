<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "‚úÖ **TO DO #1:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">WordSorter</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">sortWords()</code> method to sort the words in <code style=\"background-color: #ececec; color: black; font-weight: bold;\">wordList</code> in order based on the number at the end of each word. Use a selection, insertion, or merge sort to sort the list.\r\n\r\n   * Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">getNumber()</code> method to get the number at the end of each word.\r\n\r\n‚úÖ **TO DO #2:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">WordSorter</code> class, write the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">createSentence()</code> method to return a <code style=\"background-color: #ececec; color: black; font-weight: bold;\">String</code> consisting of the words in <code style=\"background-color: #ececec; color: black; font-weight: bold;\">wordList</code> without the numbers at the end of each word.\r\n\r\n‚úÖ **TO DO #3:** In the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">WordRunner</code> class,\r\n\r\n1. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">sortWords()</code> method and print the updated array.\r\n\r\n2. Call the <code style=\"background-color: #ececec; color: black; font-weight: bold;\">createSentence()</code> method and print the result.\r\n\r\n<div style=\"background-color: #E0D1EC; border: 1px solid #9660bf; border-radius: 5px; font-size: 1.1em; padding: 15px; margin-bottom: 10px;\">\r\nüí° <strong>TIP:</strong> Check out the <strong>Help & Tips</strong> tab ‚¨ÜÔ∏è for help with implementing a sorting algorithm.\r\n</div>",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "reference_links": [
      "/courses/csa-2023/guides/selection-sort",
      "/courses/csa-2023/guides/insertion-sort",
      "/courses/csa-2023/guides/merge-sort"
    ],
    "video_key": "csa_sorting_algorithms",
    "display_name": "Word Sorter",
    "bubble_choice_description": "Sort a list of words based on the numbers at the end of each word to create a sentence from the words.",
    "thumbnail_url": "https://images.code.org/ec58ee6e950e2541f3086145ff83f7cd-writing.png",
    "encrypted_validation": "ZM34nXqU21uCgwTTqQP+ifXIWK4Hy1q8h5Fxl7Kmw7jNRZ73smyG1k2Az+/L\nse8Es8Wv/+2HIBU/qwQ+wxVeYp8Y2c59j06oKvhbVCWlKLHRKl3uoKRihaqH\nm0dgSrifQJKtkkeLSpap0nqmNTFWN0P0h1S7OJYOSUJZ5bRSJadK6elZKgQz\n2qKsWLOxpW/n3sIlLhyYpMpy9VlB10Z9QxU91ZyHIhmOxXuY0uWY5LIT2jp7\nljBdkXGXF7TXbSSWorLCIYCIRlEiUQOEdf6H46G39irx5MnVM3w6GN3YxfVW\niYWoFp0magt7tL289lMZO0s3pndqDez+ulOdut3K1W+eRfD9X68TGRw0Wt+X\nvNJOJsPuFlRN0xqANWNsXIaT8lhZWCLXzIP7i2lSSCz1UXGx7XiSeB5fSQmp\n5OJg/MzyVKnlZpMK7BG0E1qfPM35ShQLrO6dpJWys7mVpUxxmNsZB4NgYR8g\nsOOakbrqPMptx+A6s8H3OyhrLxnF4H0QPlaOTTliV2gODjC/9KXH20fMfqwE\n2XOrP+bKfZQWTqC8/MA3BaQY16NbsSYwgdYMpVeVHI7nJePlGz80OzMmTvlG\nlw9b40Gxn22ZXzdb3RTg1V71im6mpgMF+wKsdcwA0A305Q9x9+0KhGzBNYr8\nfD64fpylNcA2tHyBXZCBoBE98gsz+O4mWYeUBnwgF5l64mf3eClTETpGVPvQ\n3Myh3OzUewjPXQG7t+QTBf837d8H2soboeG9aOJXdtLWMCKZJeV6RerysQYZ\n5Jf/gHJ5/7OmFq+92swzvbuE7Yqfygr/x2toopUaDloZBQOb55ZHZlf7DYS8\nQQOSxsfEsWsrVIKBl0qDcOlqseZ8470VCu3FpczVld5ClTGMMZXRZTBOumuX\noiHciXzhCteA7UlE1ipjNE6BEZhCYMfIvlKxjTUXjyxqcEc94ITYvhhJ1FL+\n7npuOCDfdbCKdO3AEQ3KI8r1IrLgBvuAh8kT/svIUpJMLrgv4X7oIypyNnWg\nvc+qv9bsPHpycXCydVVK0G3jkdz+DpAMfbs41EWz6aAe7k5+tuasgfpW+vpx\nAwhw78U1X5NwWWHonOtdlyUIzsoGcetFffjhoZyGvZ0YGMhTVRISmFEStTAP\nuMHBezxRGXwxqslWbBxksZuTPkERPbSNYL5NvPIrF7qETDN9fmnaw+LJRyuz\nLtXf/eTfGWYsX+182wIkVGi1KH5BiUA9rtaQspT9WQn3wap5ZHvtTvmz+7vX\nDLtHDRHVxyzGOdoBCdcAVWV44gJCZUq02AvG1lzW+rfhDUYpxBPCaHwsuJJ+\nwST1c01oX7WrtGuFIiohroE96JH6P0BzlZYL8dWd9heNuw11JWg0GtDwHsEG\nGb0pexuA3RHgtdoMnZIGp5QDAmD4HJV6RHzvPyLDCZuwX7Y3+08YwNCMvzAb\nHb50Hz+zE7Pc21BKuucBsvWtBVCYHrg+Vg81d7NTp4HtWR/wu2eHF2TuC9ZP\nevzCcUy0GGl2PnkGziGWyRFi3ZN/koXROz0NvrkbS69HIohITNWTdwq+8MN2\nVYCpi+YaiotlGrei6Du6Q5doFq+b1L9N/j8EZ2IV6YfZ9XF6c2oNccoR4pbW\nPEMQPRtMaU5HwMAjrdGkV2pMc4H1f5zKgIIhL5FIXhuqWCqJdUCNjdM8pBmN\nSVL38WjNveGCG4uNSaW9j3WXHJDXgznF0EEoyzfbJj7LR7v7BRFbya0elhWN\n8QsMp2IEMVRckvw7vI3QHOdrO9iTlSN0jizFs7HEpzVtvEa5COQ40H7pjxoI\nCY7SEjqlFWD0HjEbt5HQnfuu3H3nyJVxCYK48yEjAjWiDBroR0sIg8sNm6PB\nIQ3ufO0NsJrUMF3fKwefAnYe4VWRUl3JApS6ZOh1Dz+biz26W00Zut7pTRwj\nLN+Q7Hrp/rsMuQU5/8qbNNn2+b1ZGNdNxQEdbvXIVj8KungY8CxYGmJkOELG\nKJ9RHdY5N86R+SzVHqm1jgjwpFhPwkRbFuvdkqJvyMezApnUscIzOyg/Lai/\nrUkA5IZMIYeQ0bQd/IrZK+5flDxHaFMnlGqoT5LBiAS0ACJDV/G7Drm9/5EY\nbDnRObo3mCDAkLDSNoOtCfw5Kn9dOuhAp975P94CtCkPJjVgGVBrQjzfJbOT\n4lsTGKsWBQ9kQoA2q/hj1qEoi+8XaRfIyzGOROYcIQxnwHTbJG0eBhYL8N2P\nl02AZdORvTXDXMPWepsV8gKP7Mu8w0H7jiRUwvrv3GRMFh6tOw280DW7PgN3\nJfNNlyLfa114FYs1dRVLEwi4nJByhr8Z4r4HXB8VyaX6NQ==\n",
    "encrypted_exemplar_sources": "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\n",
    "start_sources": {
      "WordRunner.java": {
        "text": "public class WordRunner {\n  public static void main(String[] args) {\n\n    String[] words = {\"is2\", \"sentence4\", \"This1\", \"a3\"};\n\n    System.out.println(\"----------Unsorted Words----------\");\n    System.out.println(WordSorter.wordsToString(words));\n\n    System.out.println(\"\\n----------Sorted Into Sentence----------\");\n\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Call the sortWords() method and print the updated array. Then call the\n     * createSentence() method and print the result.\n     * -----------------------------------------------------------------------------\n     */\n    \n\n    \n    \n  }\n}",
        "isVisible": true,
        "tabOrder": 0
      },
      "WordSorter.java": {
        "text": "/*\n * Manages lists of words\n */\npublic class WordSorter {\n\n  /*\n   * Sorts the wordList in order according to the number\n   * at the end of each word\n   */\n  public static void sortWords(String[] wordList) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Use a selection, insertion, or merge sort to sort the words in the\n     * 1D array wordList in order based on the number at the end of each word.\n     * -----------------------------------------------------------------------------\n     */\n\n\n    \n  }\n\n  /*\n   * Returns the number at the end of the String\n   */\n  public static int getNumber(String currentWord) {\n    String number = currentWord.substring(currentWord.length() - 1);\n    return Integer.parseInt(number);\n  }\n\n  /*\n   * Returns a String containing each word in wordList without the \n   * number that appears at the end of each String\n   */\n  public static String createSentence(String[] wordList) {\n    /* ----------------------------------- TO DO -----------------------------------\n     * ‚úÖ Traverse the 1D array wordList and obtain a substring of each word\n     * without the number at the end. Concatenate each substring to a new String\n     * and return the String.\n     * -----------------------------------------------------------------------------\n     */\n\n    \n    return \"\";\n  }\n\n  /*\n   * Returns a String containing each word in wordList\n   */\n  public static String wordsToString(String[] wordList) {\n    String result = \"\";\n    \n    for (String word : wordList) {\n      result += word + \" \";\n    }\n\n    return result;\n  }\n  \n}",
        "isVisible": true,
        "tabOrder": 1
      }
    }
  },
  "game_id": 68,
  "created_at": "2023-04-14T14:10:24.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2023-04-14T14:10:24.239+00:00\",\"changed\":[\"cloned from \\\"CSA U8L7-L8b_2023\\\"\"],\"cloned_from\":\"CSA U8L7-L8b_2023\"},{\"changed_at\":\"2023-04-14 14:10:25 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 01:28:09 +0000\",\"changed\":[\"long_instructions\",\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:13:31 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:15:34 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:15:36 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:15:45 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:16:09 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:16:13 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:20:08 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2023-04-21 02:20:19 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
